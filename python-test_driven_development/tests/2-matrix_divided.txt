The ``matrix_divided`` module
======================

Using ``matrix_divided``
-------------------


Import ``matrix_divided``:

     >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

    Basic matrix divided:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    Matrix divided Zero:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    Matrix divided same size list:
    >>> matrix_divided([[1, 2], [3], [4, 5]], 6)
    Traceback (most recent call last):
    	      ...
    TypeError: Each row of the matrix must have the same size

    Matrix divided string:
    >>> matrix_divided([["This", "Project"], ["Is", "Hard"]], 10)
    Traceback (most recent call last):
     	       ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    Matrix divided string:
    >>> matrix_divided([[1, 2], [3, 4]], "5")
    Traceback (most recent call last):
    	      ...
    TypeError: div must be a number

    Matrix divided missing arg:
    >>> matrix_divided()
    Traceback (most recent call last):
    	      ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
    
    Matrix divided missing one arg:
    >>> matrix_divided([[1, 2], [3, 4]])
    Traceback (most recent call last):
    	      ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    Matrix divided equal 0:
    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
    	      ...
    ZeroDivisionError: division by zero

    Matrix divided float inf:
    >>> matrix = [[1, 2], [3, 4]]
    >>> print(matrix_divided(matrix, float('inf')))
    [[0.0, 0.0], [0.0, 0.0]]